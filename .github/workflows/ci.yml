name: Pydoc unittest  C2I

on:
  push:
    #pull_request:
    #tags:
    #- 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches: [master]
    

jobs:
   
  env:
   runs-on: ubuntu-latest
   steps:
   - name: "üîß env"
     run : env 
   - name: "üîß ls -alrt"
     run:  ls -alrt
   - name: "üîß pwd"
     run:  pwd
   


  checkout:
    runs-on: ubuntu-latest
    needs: env
    permissions:
      contents: write
      issues: read
      deployments: write
    steps:
    - name : "‚òÅÔ∏è checkout repo"
      uses: actions/checkout@v3

    - name: "üîç affiche variables"
      run: |
        echo GITHUB_WORKSPACE: $GITHUB_WORKSPACE 
        echo GITHUB_ACTION_REPOSITORY: $GITHUB_ACTION_REPOSITORY 
        echo GIT_DIR: $GIT_DIR  
        echo GIT_WORK_TREE: $GIT_WORK_TREE 
        echo GITHUB_PATH: $GITHUB_PATH 
        echo GITHUB_OUTPUT: $GITHUB_OUTPUT
  
    - name: "üì¶ genere doc html  (pydoc3 -w src/calc.py)"
      #working-directory: ./calc/
      run: |
        echo $(date +%Y%m%d-%H:%M:%S)
        #pydoc3 -w src/calc.py
        
        #git fetch origin
        #git checkout -b master
        #git pull origin master

    - name: transform doc txt md 
      run: | 
        echo $(date +%Y%m%d-%H:%M:%S)
        DOC_OUTPUT=$(pydoc3 src/calc.py)
        mkdir -p documentations
        pydoc3 src/calc.py >documentations/doc.txt 
        pydoc3 src/calc.py >documentations/doc2.txt 
        IFS=""
        #DOC=$(echo $DOC_OUTPUT | sed -e 's/^NAME/# &/'  -e 's/^DESCRIPTION/## &/' -e 's/^FUNCTIONS/### &/' -e 's/^FILE/#### &/')
        DOC=$( echo "$DOC_OUTPUT" | sed -e '/^[^ ]/s/^/# /'     -e '/^    [^ ]/s/^    /## /'      -e '/^        [^ ]/s/^        /### /')
        echo "* $(date +%Y%m%d-%H:%M:%S)" >doc.md
        echo "${DOC}" >>doc.md
        #cat doc.md
        echo "* $(date +%Y%m%d-%H:%M:%S)" >doc2.md
        echo $( echo "$DOC_OUTPUT" | sed -e '/^[^ ]/s/^/# /'     -e '/^    [^ ]/s/^    /## /'      -e '/^        [^ ]/s/^        /### /') >>doc2.md
        #cat doc2.md
        #for item in $(echo $DOC_OUTPUT); do echo $item; done       
        unset IFS        
        ls -altr documentations/
        for file in $(ls documentations/*txt ); do \
        prefix_name=$(basename $file .txt);\
        echo $file ;\
        IFS='' ;\
        cat $file| sed -e '/^[^ ]/s/^/# /'     -e '/^    [^ ]/s/^    /## /'      -e '/^        [^ ]/s/^        /### /'  > documentations/$prefix_name.md ;\
        unset IFS ;\
        done
        ls -altr documentations/
        #
        #echo $DOC_OUTPUT | sed -e 's/^NAME/# &/' -e 's/^DESCRIPTION/## &/'  -e 's/^FUNCTIONS/### &/' -e 's/^FILE/#### &/'  -e 's/^\([0-9]\+\.\) /* &/'  -e 's/^\* /* &/' 
        git config user.email 'github+bot-actions@stock.eu.org'
        git config user.name 'Fab Reno'
        touch calc.html   doc*.md 
        git add calc.html doc*.md -A
        git add  -A documentations/\*.md
        git add  -A documentations/\*.txt
        git commit -m "cal.html & add md documentation pydoc3"
        git push origin master 
        # git config gpg.format ssh
        # git config user.signingKey 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHnlMYthrlF2PhdLMI78hMx51wq0l8P2L82JOaOLwQ81 fab@localhost'

    - name: "üîç run tests in dir tests  (python -m unittest  discover tests)"
      run: python -m unittest  discover   tests
    
    - name: "üîç env variable pwd"
      run: pwd && ls -altr && echo ${GITHUB_WORKSPACE} 
  

    - name: Add doc 
      run: |
        ls -altr

