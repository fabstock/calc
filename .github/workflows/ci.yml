name: Pydoc and PPP  CI

on:
  push:
  #pull_request:
  #tags:
    #- 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches: [master]
    

jobs:
   
  env:
   runs-on: ubuntu-latest
   steps:
   - name: env
     run : env 
   - name: ls -alrt
     run:  ls -alrt
   - name: pwd
     run:  pwd


  checkout:
    runs-on: ubuntu-latest
    needs: env
    steps:
    - name : checkout repo
      uses: actions/checkout@v3

    - name: affiche variables
      run: |
        echo GITHUB_WORKSPACE: $GITHUB_WORKSPACE GITHUB_ACTION_REPOSITORY: $GITHUB_ACTION_REPOSITORY GIT_DIR: $GIT_DIR  GIT_WORK_TREE: $GIT_WORK_TREE \
             GITHUB_PATH: $GITHUB_PATH
    - name: genere doc  (pydoc3 -w src/calc.py)
      #working-directory: ./calc/
      run:  pydoc3 -w src/calc.py  

    - name: run tests in dir tests  (python -m unittest  discover tests)
      run: python -m unittest  discover   calc/tests
    
    - name: env variable pwd
      run: pwd && ls -altr && echo ${GITHUB_WORKSPACE} 

    - name: Create Release
      #working-directory: calc/
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
            - First Change
            - Second Change
        draft: false
        prerelease: false
 
